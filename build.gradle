buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven { url 'https://jitpack.io' }
        maven {
            url = "https://repo.sk1er.club/repository/maven-public"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.github.johnrengelman.shadow"

version = "1.8"
group = "dev.gaminggeek.mojangstatus" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MojangStatus"

sourceCompatibility = targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientRunArgs += "--tweakClass net.modcore.loader.ModCoreSetupTweaker"
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.sk1er.club/repository/maven-public" }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed("net.modcore:Loader:2.0.0")
    embed("com.squareup.okhttp3:okhttp:4.5.0")

    implementation("com.google.code.gson:gson:2.2.4")
    implementation("net.modcore:ModCore:713-10809-SNAPSHOT") {
        exclude module: 'asm-commons'
        exclude module: 'asm-tree'
        exclude module: 'asm'
    }
}

shadowJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    configurations = [project.configurations.embed]

    classifier = ''

    manifest.attributes(
            "TweakClass": "net.modcore.loader.ModCoreSetupTweaker",
            "TweakOrder": "0"
    )
}

reobfJar.dependsOn tasks.shadowJar

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
